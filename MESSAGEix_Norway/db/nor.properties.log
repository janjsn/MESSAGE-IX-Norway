/*C1*/SET SCHEMA SYSTEM_LOBS
INSERT INTO BLOCKS VALUES(0,2147483647,0)
COMMIT
/*C2*/SET SCHEMA PUBLIC
SET SCHEMA "PUBLIC"
DISCONNECT
/*C3*/SET SCHEMA PUBLIC
SET SCHEMA "PUBLIC"
CREATE TABLE "PUBLIC"."schema_version" (\u000a    "installed_rank" INT NOT NULL,\u000a    "version" VARCHAR(50),\u000a    "description" VARCHAR(200) NOT NULL,\u000a    "type" VARCHAR(20) NOT NULL,\u000a    "script" VARCHAR(1000) NOT NULL,\u000a    "checksum" INT,\u000a    "installed_by" VARCHAR(100) NOT NULL,\u000a    "installed_on" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,\u000a    "execution_time" INT NOT NULL,\u000a    "success" BIT NOT NULL\u000a)
ALTER TABLE "PUBLIC"."schema_version" ADD CONSTRAINT "schema_version_pk" PRIMARY KEY ("installed_rank")
CREATE INDEX "PUBLIC"."schema_version_s_idx" ON "PUBLIC"."schema_version" ("success")
CREATE SEQUENCE ANNOTATION_SEQ as bigint
CREATE SEQUENCE CHANGELOG_SEQ as bigint
CREATE SEQUENCE IAMC_KEY_SEQ as bigint
CREATE SEQUENCE MODEL_SEQ as bigint
CREATE SEQUENCE RUN_SEQ as bigint
CREATE SEQUENCE SCENARIO_SEQ as bigint
CREATE SEQUENCE UNIT_SEQ as bigint start with 100
CREATE SEQUENCE IAMC_TS_SEQ as bigint
create table SCHEMA_CONFIG (\u000a    PARAM VARCHAR(64) not null,\u000a    PARTYPE VARCHAR(8) not null,\u000a    STRVALUE VARCHAR(128),\u000a    NUMVALUE DOUBLE,\u000a    NOTE VARCHAR(256)\u000a)
INSERT INTO SCHEMA_CONFIG VALUES('VERSION_MAJOR','INTEGER',NULL,0.0E0,NULL)
INSERT INTO SCHEMA_CONFIG VALUES('VERSION_MINOR','INTEGER',NULL,1.0E0,NULL)
COMMIT
create table APP_AUDIT  (\u0009\u000a USR VARCHAR(64)  not null, \u000a MODEL VARCHAR(64)  not null, \u000a SCEN VARCHAR(64)  not null, \u000a ACTION VARCHAR(64)  , \u000a INFO VARCHAR(512)  ,\u000a "WHEN" TIMESTAMP default now() not null\u000a)
create table APP_FILES  (\u0009\u000a ID INTEGER not null, \u000a USR VARCHAR(64) not null, \u000a GRP VARCHAR(64) not null, \u000a NAME VARCHAR(256) not null, \u000a "TIMESTAMP" TIMESTAMP default now() not null, \u000a FILESIZE DOUBLE DEFAULT 0, \u000a STATUS VARCHAR(64)\u000a ,\u0009PRIMARY KEY ("ID")\u000a)
create table APP_IMPORT_HISTORY   (\u000a USR VARCHAR(64) not null, \u000a MODEL VARCHAR(64) not null, \u000a SCENARIO VARCHAR(64) not null , \u000a "TIMESTAMP" TIMESTAMP default now() not null, \u000a FILENAME VARCHAR(128), \u000a INFO VARCHAR(64)\u000a)
create table APP_IMPORT_QUEUE (\u000a USR VARCHAR(64)  not null, \u000a FILENAME VARCHAR(256) not null, \u000a STATE VARCHAR(64) default 'NEW', \u000a "TIMESTAMP" TIMESTAMP default now()\u000a ,\u0009PRIMARY KEY ("USR", "FILENAME")\u000a)
create table APP_CONFIG (\u000a PARAM VARCHAR(64)  not null,\u000a PARTYPE VARCHAR(8) default 'STRING' not null,\u000a STRVALUE VARCHAR(128)  ,\u000a NUMVALUE INTEGER  ,\u000a NOTE VARCHAR(256)\u000a , PRIMARY KEY ( PARAM ) \u000a)
create table APP_USER (\u000a LOGIN VARCHAR(128) not null,\u000a PASSWORD VARCHAR(128) default 'iimq9WhxKcHSe5BXj8M+zEnQadw=' not null,\u000a EMAIL VARCHAR(128)  ,\u000a REALNAME VARCHAR(128)  ,\u000a COUNTRY VARCHAR(128)  ,\u000a ORGANIZATION VARCHAR(128)  ,\u000a STREET VARCHAR(256)  ,\u000a TEMPKEY VARCHAR(128)   \u000a , PRIMARY KEY ( LOGIN ) \u000a)
create table APP_USER_CONFIG (\u000a  LOGIN VARCHAR(128) not null,\u000a  PARAM VARCHAR(64) not null,\u000a  PARTYPE VARCHAR(8) default 'STRING' not null,\u000a  STRVALUE VARCHAR(256), \u000a  NUMVALUE DOUBLE, \u000a  NOTE VARCHAR(256) \u000a , PRIMARY KEY ("LOGIN", "PARAM")\u000a)
create table MODEL (\u000a ID INTEGER  not null,\u000a NAME VARCHAR(64)  not null \u000a , PRIMARY KEY ( ID ) \u000a)
create table SCENARIO (\u000a ID INTEGER  not null,\u000a NAME VARCHAR(64)  not null \u000a , PRIMARY KEY ( ID ) \u000a)
create table RUN (\u000a ID INTEGER  not null,\u000a MODEL_ID INTEGER  not null,\u000a SCEN_ID INTEGER  not null,\u000a CRE_USER VARCHAR(64) default '(unknown)' not null,\u000a CRE_DATE TIMESTAMP default now() not null,\u000a UPD_USER VARCHAR(64)  ,\u000a UPD_DATE TIMESTAMP  ,\u000a SCHEME VARCHAR(20)  ,\u000a STATUS INTEGER default 0 not null,\u000a VERSION INTEGER default 0 not null,\u000a LOCK_USER VARCHAR(64)  ,\u000a LOCK_DATE TIMESTAMP  ,\u000a SEQ_ITEM_ID INTEGER,   \u000a ANNOTATION VARCHAR(264)\u000a , PRIMARY KEY ( ID ) \u000a)
create table RUN_DEFAULT (\u000a MODEL_ID INTEGER  not null,\u000a SCEN_ID INTEGER  not null,\u000a ID INTEGER  not null \u000a , PRIMARY KEY ( MODEL_ID,SCEN_ID ) \u000a)
create table ANNOTATION_LOG (\u000a ANNOTATIONID INTEGER not null,\u000a STATUS VARCHAR(128) not null,\u000a RUNID INTEGER,\u000a SCRIPT VARCHAR(128) not null,\u000a CRE_USER VARCHAR(128) default '(unknown)' not null,\u000a CRE_DATE TIMESTAMP default now() not null,\u000a UPD_USER VARCHAR(64)  ,\u000a UPD_DATE TIMESTAMP  ,\u000a TEXT VARCHAR(512)  ,\u000a INTERFACE VARCHAR(20)   \u000a , PRIMARY KEY ( ANNOTATIONID ) \u000a)
create table CHANGE_LOG (\u000a ANNOTATIONID INTEGER  not null,\u000a RUNID INTEGER  not null,\u000a OPERATION VARCHAR(64)  not null,\u000a ITEM VARCHAR(64)  not null,\u000a KEY VARCHAR(512)  ,\u000a VAL_PREV DOUBLE  ,\u000a VAL_NEW DOUBLE  ,\u000a SEQ INTEGER   \u000a  \u000a)
create table IX_UNIT (\u000a ID INTEGER  not null,\u000a NAME VARCHAR(64)  not null,\u000a CRE_USER VARCHAR(64), \u000a CRE_DATE TIMESTAMP default now() not null,\u000a SCHEME VARCHAR(64)\u000a , PRIMARY KEY ( ID ) \u000a , CONSTRAINT UNIT_NAME_INDEX UNIQUE ( NAME )\u000a)
create table IAMC_KEY (\u000a KEYID INTEGER  not null,\u000a KEYSTRING VARCHAR(256)  not null,\u000a UNITID INTEGER  not null,\u000a CRE_USER VARCHAR(64)  not null,\u000a CRE_DATE TIMESTAMP  not null,\u000a SCHEME VARCHAR(128)   \u000a , PRIMARY KEY ( KEYID ) \u000a)
create table IAMC_NODES (\u000a ID INTEGER  not null,\u000a HIERARCHY VARCHAR(20)  not null,\u000a NAME VARCHAR(64)  not null,\u000a PARENT VARCHAR(64)  not null \u000a , PRIMARY KEY ( ID ) \u000a)
create table IAMC_NODES_SYNONYM (\u000a NODE_ID INTEGER  not null,\u000a NODE_SYNONYM VARCHAR(64)  not null \u000a , PRIMARY KEY ( NODE_SYNONYM ) \u000a)
create table IAMC_TSDATA (\u000a TSID INTEGER not null,\u000a YEAR INTEGER  not null,\u000a VALUE DOUBLE  not null\u000a , PRIMARY KEY ( TSID,YEAR ) \u000a)
create table IAMC_TSINFO (\u000a TSID INTEGER not null,\u000a RUNID INTEGER  not null,\u000a NODE INTEGER  not null,\u000a KEY INTEGER  not null,\u000a TIME INTEGER  not null,\u000a META INTEGER  default 0 not null\u000a , PRIMARY KEY ( TSID,RUNID,NODE,KEY,TIME ) \u000a , CONSTRAINT IAMC_TSINFO_TSID_UK UNIQUE ( TSID )\u000a)
create table IX_KEY (\u000a RUNID INTEGER  not null,\u000a KEYID INTEGER  not null,\u000a KEY VARCHAR(40)  not null \u000a , PRIMARY KEY ( RUNID,KEYID ) \u000a)
create table IX_COMMENT (\u000a COMID INTEGER  not null,\u000a COMSTRING VARCHAR(512)  not null,\u000a RUNID INTEGER  not null \u000a , PRIMARY KEY ( COMID,RUNID ) \u000a)
create table IX_IDXSET (\u000a RUNID INTEGER  not null,\u000a NAME VARCHAR(64)  not null,\u000a ELE_BLOB BLOB  ,\u000a ITEMID INTEGER  not null,\u000a COM_BLOB BLOB   \u000a , PRIMARY KEY ( RUNID,NAME ) \u000a)
create table IX_SET (\u000a RUNID INTEGER  not null,\u000a NAME VARCHAR(64)  not null,\u000a DIM INTEGER default null ,\u000a ITEMID INTEGER   \u000a , PRIMARY KEY ( RUNID,NAME ) \u000a)
create table IX_SET_DIM (\u000a RUNID INTEGER  not null,\u000a NAME VARCHAR(64)  not null,\u000a IDX INTEGER  not null,\u000a IDX_SET VARCHAR(64)  not null,\u000a IDX_NAME VARCHAR(64)  not null \u000a , PRIMARY KEY ( RUNID,NAME,IDX ) \u000a)
create table IX_SET_BLOBSTORE (\u000a RUNID INTEGER  not null,\u000a NAME VARCHAR(256)  not null,\u000a ELE_BLOB BLOB  ,\u000a COM_BLOB BLOB   \u000a , PRIMARY KEY ( RUNID,NAME ) \u000a)
create table IX_PAR (\u000a RUNID INTEGER  not null,\u000a NAME VARCHAR(64)  not null,\u000a DIM INTEGER default 0 not null,\u000a ITEMID INTEGER   \u000a , PRIMARY KEY ( RUNID,NAME ) \u000a)
create table IX_PAR_DIM (\u000a RUNID INTEGER  not null,\u000a NAME VARCHAR(64)  not null,\u000a IDX INTEGER  not null,\u000a IDX_SET VARCHAR(64)  not null,\u000a IDX_NAME VARCHAR(64)  not null \u000a , PRIMARY KEY ( RUNID,NAME,IDX ) \u000a)
create table IX_PAR_BLOBSTORE (\u000a RUNID INTEGER  not null,\u000a NAME VARCHAR(256)  not null,\u000a ELE_BLOB BLOB  ,\u000a COM_BLOB BLOB   \u000a , PRIMARY KEY ( RUNID,NAME ) \u000a)
create table IX_VAR (\u000a RUNID INTEGER  not null,\u000a NAME VARCHAR(64)  not null,\u000a DIM INTEGER default 0 not null,\u000a ITEMID INTEGER  not null \u000a , PRIMARY KEY ( RUNID,NAME ) \u000a)
create table IX_VAR_DIM (\u000a RUNID INTEGER  not null,\u000a NAME VARCHAR(64)  not null,\u000a IDX INTEGER  not null,\u000a IDX_SET VARCHAR(64)  not null,\u000a IDX_NAME VARCHAR(64)  not null \u000a , PRIMARY KEY ( RUNID,NAME,IDX ) \u000a)
create table IX_VAR_BLOBSTORE (\u000a RUNID INTEGER  not null,\u000a NAME VARCHAR(256)  not null,\u000a ELE_BLOB BLOB  ,\u000a COM_BLOB BLOB   \u000a , PRIMARY KEY ( RUNID,NAME ) \u000a)
create table IX_EQU (\u000a RUNID INTEGER  not null,\u000a NAME VARCHAR(64)  not null,\u000a DIM INTEGER  not null,\u000a ITEMID INTEGER  not null \u000a , PRIMARY KEY ( RUNID,NAME ) \u000a)
create table IX_EQU_DIM (\u000a RUNID INTEGER  not null,\u000a NAME VARCHAR(64)  not null,\u000a IDX INTEGER  not null,\u000a IDX_SET VARCHAR(64)  not null,\u000a IDX_NAME VARCHAR(64)  not null \u000a , PRIMARY KEY ( RUNID,NAME,IDX ) \u000a)
create table IX_EQU_BLOBSTORE (\u000a RUNID INTEGER  not null,\u000a NAME VARCHAR(256)  not null,\u000a ELE_BLOB BLOB  ,\u000a COM_BLOB BLOB   \u000a , PRIMARY KEY ( RUNID,NAME ) \u000a)
alter table RUN add foreign key ( MODEL_ID ) references MODEL ( ID ) on update CASCADE on delete RESTRICT
alter table RUN add foreign key ( SCEN_ID ) references SCENARIO ( ID ) on update CASCADE on delete RESTRICT
alter table RUN_DEFAULT add foreign key ( ID ) references RUN ( ID ) on update CASCADE on delete CASCADE
alter table ANNOTATION_LOG add foreign key ( RUNID ) references RUN ( ID ) on update CASCADE on delete CASCADE
alter table CHANGE_LOG add foreign key ( ANNOTATIONID ) references ANNOTATION_LOG ( ANNOTATIONID ) on update CASCADE on delete RESTRICT
alter table CHANGE_LOG add foreign key ( RUNID ) references RUN ( ID ) on update CASCADE on delete CASCADE
alter table IAMC_KEY add foreign key ( UNITID ) references IX_UNIT ( ID ) on update CASCADE on delete RESTRICT
alter table IAMC_NODES_SYNONYM add foreign key ( NODE_ID ) references IAMC_NODES ( ID ) on update CASCADE on delete RESTRICT
alter table IAMC_TSDATA add foreign key ( TSID ) references IAMC_TSINFO ( TSID ) on update CASCADE on delete CASCADE
alter table IX_KEY add foreign key ( RUNID ) references RUN ( ID ) on update CASCADE on delete CASCADE
alter table IX_COMMENT add foreign key ( RUNID ) references RUN ( ID ) on update CASCADE on delete CASCADE
alter table IX_IDXSET add foreign key ( RUNID ) references RUN ( ID ) on update CASCADE on delete CASCADE
alter table IX_SET add foreign key ( RUNID ) references RUN ( ID ) on update CASCADE on delete CASCADE
alter table IX_SET_DIM add foreign key ( RUNID,NAME ) references IX_SET ( RUNID,NAME ) on update CASCADE on delete CASCADE
alter table IX_SET_DIM add foreign key ( RUNID,IDX_SET ) references IX_IDXSET ( RUNID,NAME ) on update CASCADE on delete CASCADE
alter table IX_SET_BLOBSTORE add foreign key ( RUNID,NAME ) references IX_SET ( RUNID,NAME ) on update CASCADE on delete CASCADE
alter table IX_PAR add foreign key ( RUNID ) references RUN ( ID ) on update CASCADE on delete CASCADE
alter table IX_PAR_DIM add foreign key ( RUNID,NAME ) references IX_PAR ( RUNID,NAME ) on update CASCADE on delete CASCADE
alter table IX_PAR_DIM add foreign key ( RUNID,IDX_SET ) references IX_IDXSET ( RUNID,NAME ) on update CASCADE on delete CASCADE
alter table IX_PAR_BLOBSTORE add foreign key ( RUNID,NAME ) references IX_PAR ( RUNID,NAME ) on update CASCADE on delete CASCADE
alter table IX_VAR add foreign key ( RUNID ) references RUN ( ID ) on update CASCADE on delete CASCADE
alter table IX_VAR_DIM add foreign key ( RUNID,NAME ) references IX_VAR ( RUNID,NAME ) on update CASCADE on delete CASCADE
alter table IX_VAR_DIM add foreign key ( RUNID,IDX_SET ) references IX_IDXSET ( RUNID,NAME ) on update CASCADE on delete CASCADE
alter table IX_VAR_BLOBSTORE add foreign key ( RUNID,NAME ) references IX_VAR ( RUNID,NAME ) on update CASCADE on delete CASCADE
alter table IX_EQU add foreign key ( RUNID ) references RUN ( ID ) on update CASCADE on delete CASCADE
alter table IX_EQU_DIM add foreign key ( RUNID,NAME ) references IX_EQU ( RUNID,NAME ) on update CASCADE on delete CASCADE
alter table IX_EQU_DIM add foreign key ( RUNID,IDX_SET ) references IX_IDXSET ( RUNID,NAME ) on update CASCADE on delete CASCADE
alter table IX_EQU_BLOBSTORE add foreign key ( RUNID,NAME ) references IX_EQU ( RUNID,NAME ) on update CASCADE on delete CASCADE
CREATE VIEW RUN_OVERVIEW (ID, MODEL, SCENARIO, CRE_USER, CRE_DATE, UPD_USER, UPD_DATE, LOCK_USER, LOCK_DATE, SCHEME, STATUS, VERSION, ANNOTATION, ISDEFAULT) \u000aAS\u000aselect r.id, m.name model, s.name scenario, \u000ar.cre_user, r.cre_date, r.upd_user, r.upd_date, r.lock_user, r.lock_date,\u000ar.scheme, r.status, r.version version, r.annotation\u000a, case cast(d.id as BOOLEAN) when true then 'True' else ' ' end isdefault\u000afrom run r\u000ainner join model m on m.id = r.model_id\u000ainner join scenario s on s.id = r.scen_id\u000aleft join run_default d on (d.MODEL_ID = m.ID and d.SCEN_ID = s.ID and d.ID = r.ID )\u000aorder by model, scenario, d.ID, version desc
CREATE VIEW IAMC_OVERVIEW (MODEL, SCENARIO, REGION, VARIABLE, UNIT, TIME, YEAR, VALUE, META, VERSION, ISDEFAULT) \u000aAS\u000aselect m.name, s.name, n.name, k.keystring, u.name, i.time, d.year, d.value, i.meta, r.version, \u000acase cast(rd.id as BOOLEAN) when true then 'True' else ' ' end isdefault\u000afrom iamc_key k\u000ainner join ix_unit u on (u.id = k.unitid)\u000ainner join iamc_tsinfo i on (i.key = k.keyid)\u000ainner join run r on (r.id = i.runid)\u000aleft join run_default rd on (rd.ID = r.ID)\u000ainner join model m on m.id = r.model_id\u000ainner join scenario s on s.id = r.scen_id\u000ainner join iamc_nodes n on (i.node = n.id)\u000ainner join iamc_tsdata d on (i.tsid = d.tsid)
INSERT INTO APP_USER VALUES('admin','pMuy85M8UBbafoP9E1q4pItnv2E=',NULL,'Administrator',NULL,NULL,NULL,NULL)
INSERT INTO IX_UNIT VALUES(-1,'???',NULL,'2019-12-04 14:10:00.166000',NULL)
INSERT INTO IX_UNIT VALUES(0,'y',NULL,'2019-12-04 14:10:00.167000',NULL)
INSERT INTO IX_UNIT VALUES(1,'%',NULL,'2019-12-04 14:10:00.167000',NULL)
INSERT INTO IX_UNIT VALUES(2,'GWa',NULL,'2019-12-04 14:10:00.167000',NULL)
INSERT INTO IX_UNIT VALUES(3,'USD/GWa',NULL,'2019-12-04 14:10:00.167000',NULL)
INSERT INTO IX_UNIT VALUES(4,'kg/kWa',NULL,'2019-12-04 14:10:00.167000',NULL)
INSERT INTO IX_UNIT VALUES(5,'kg',NULL,'2019-12-04 14:10:00.167000',NULL)
INSERT INTO IX_UNIT VALUES(6,'USD/kg',NULL,'2019-12-04 14:10:00.167000',NULL)
INSERT INTO IX_UNIT VALUES(7,'USD',NULL,'2019-12-04 14:10:00.167000',NULL)
INSERT INTO IX_UNIT VALUES(8,'cases',NULL,'2019-12-04 14:10:00.167000',NULL)
INSERT INTO IX_UNIT VALUES(9,'km',NULL,'2019-12-04 14:10:00.167000',NULL)
INSERT INTO IX_UNIT VALUES(10,'USD/km',NULL,'2019-12-04 14:10:00.167000',NULL)
INSERT INTO IX_UNIT VALUES(11,'GW',NULL,'2019-12-04 14:10:00.167000',NULL)
INSERT INTO IX_UNIT VALUES(12,'G$',NULL,'2019-12-04 14:10:00.167000',NULL)
INSERT INTO IX_UNIT VALUES(13,'T$',NULL,'2019-12-04 14:10:00.167000',NULL)
INSERT INTO IX_UNIT VALUES(14,'-',NULL,'2019-12-04 14:10:00.167000',NULL)
INSERT INTO IX_UNIT VALUES(15,'USD/kWa',NULL,'2019-12-04 14:10:00.167000',NULL)
INSERT INTO IX_UNIT VALUES(16,'MW',NULL,'2019-12-04 14:10:00.167000',NULL)
INSERT INTO IX_UNIT VALUES(17,'MWa',NULL,'2019-12-04 14:10:00.167000',NULL)
INSERT INTO IX_UNIT VALUES(18,'USD/tC',NULL,'2019-12-04 14:10:00.167000',NULL)
INSERT INTO IX_UNIT VALUES(19,'USD/tCO2',NULL,'2019-12-04 14:10:00.167000',NULL)
INSERT INTO IX_UNIT VALUES(20,'t',NULL,'2019-12-04 14:10:00.167000',NULL)
INSERT INTO IX_UNIT VALUES(21,'tC',NULL,'2019-12-04 14:10:00.167000',NULL)
INSERT INTO IX_UNIT VALUES(22,'tCO2',NULL,'2019-12-04 14:10:00.168000',NULL)
INSERT INTO IAMC_NODES VALUES(0,'global','World','World')
INSERT INTO IAMC_NODES VALUES(1,'region (R11)','North America (R11)','World')
INSERT INTO IAMC_NODES VALUES(2,'region (R11)','Latin America (R11)','World')
INSERT INTO IAMC_NODES VALUES(3,'region (R11)','Western Europe (R11)','World')
INSERT INTO IAMC_NODES VALUES(4,'region (R11)','Eastern Europe (R11)','World')
INSERT INTO IAMC_NODES VALUES(5,'region (R11)','Former Soviet Union (R11)','World')
INSERT INTO IAMC_NODES VALUES(6,'region (R11)','Middle East and Africa (R11)','World')
INSERT INTO IAMC_NODES VALUES(7,'region (R11)','Subsaharan Africa (R11)','World')
INSERT INTO IAMC_NODES VALUES(8,'region (R11)','Centrally planned Asia (R11)','World')
INSERT INTO IAMC_NODES VALUES(9,'region (R11)','Pacific OECD (R11)','World')
INSERT INTO IAMC_NODES VALUES(10,'region (R11)','Pacific Asia (R11)','World')
INSERT INTO IAMC_NODES VALUES(11,'region (R11)','South Asia (R11)','World')
INSERT INTO IAMC_NODES VALUES(12,'country','Canada','World')
INSERT INTO IAMC_NODES VALUES(13,'country','Sao Tome and Principe','World')
INSERT INTO IAMC_NODES VALUES(14,'country','Turkmenistan','World')
INSERT INTO IAMC_NODES VALUES(15,'country','Saint Helena','World')
INSERT INTO IAMC_NODES VALUES(16,'country','Lithuania','World')
INSERT INTO IAMC_NODES VALUES(17,'country','Cambodia','World')
INSERT INTO IAMC_NODES VALUES(18,'country','Ethiopia','World')
INSERT INTO IAMC_NODES VALUES(19,'country','Aruba','World')
INSERT INTO IAMC_NODES VALUES(20,'country','Swaziland','World')
INSERT INTO IAMC_NODES VALUES(21,'country','Palestine','World')
INSERT INTO IAMC_NODES VALUES(22,'country','Argentina','World')
INSERT INTO IAMC_NODES VALUES(23,'country','Bolivia','World')
INSERT INTO IAMC_NODES VALUES(24,'country','Bahamas, The','World')
INSERT INTO IAMC_NODES VALUES(25,'country','Burkina Faso','World')
INSERT INTO IAMC_NODES VALUES(26,'country','Ghana','World')
INSERT INTO IAMC_NODES VALUES(27,'country','Saudi Arabia','World')
INSERT INTO IAMC_NODES VALUES(28,'country','Cape Verde','World')
INSERT INTO IAMC_NODES VALUES(29,'country','Slovenia','World')
INSERT INTO IAMC_NODES VALUES(30,'country','Guatemala','World')
INSERT INTO IAMC_NODES VALUES(31,'country','Bosnia and Herzegovina','World')
INSERT INTO IAMC_NODES VALUES(32,'country','Guinea','World')
INSERT INTO IAMC_NODES VALUES(33,'country','Jordan','World')
INSERT INTO IAMC_NODES VALUES(34,'country','Congo, Rep.','World')
INSERT INTO IAMC_NODES VALUES(35,'country','Spain','World')
INSERT INTO IAMC_NODES VALUES(36,'country','Liberia','World')
INSERT INTO IAMC_NODES VALUES(37,'country','Netherlands','World')
INSERT INTO IAMC_NODES VALUES(38,'country','Jamaica','World')
INSERT INTO IAMC_NODES VALUES(39,'country','Oman','World')
INSERT INTO IAMC_NODES VALUES(40,'country','Tanzania','World')
INSERT INTO IAMC_NODES VALUES(41,'country','Albania','World')
INSERT INTO IAMC_NODES VALUES(42,'country','Gabon','World')
INSERT INTO IAMC_NODES VALUES(43,'country','Niue','World')
INSERT INTO IAMC_NODES VALUES(44,'country','New Zealand','World')
INSERT INTO IAMC_NODES VALUES(45,'country','Yemen','World')
INSERT INTO IAMC_NODES VALUES(46,'country','Pakistan','World')
INSERT INTO IAMC_NODES VALUES(47,'country','Greenland','World')
INSERT INTO IAMC_NODES VALUES(48,'country','Samoa','World')
INSERT INTO IAMC_NODES VALUES(49,'country','Slovak Republic','World')
INSERT INTO IAMC_NODES VALUES(50,'country','United Arab Emirates','World')
INSERT INTO IAMC_NODES VALUES(51,'country','Guam','World')
INSERT INTO IAMC_NODES VALUES(52,'country','Kosovo','World')
INSERT INTO IAMC_NODES VALUES(53,'country','India','World')
INSERT INTO IAMC_NODES VALUES(54,'country','Azerbaijan','World')
INSERT INTO IAMC_NODES VALUES(55,'country','Madagascar','World')
INSERT INTO IAMC_NODES VALUES(56,'country','Lesotho','World')
INSERT INTO IAMC_NODES VALUES(57,'country','Saint Vincent and the Grenadines','World')
INSERT INTO IAMC_NODES VALUES(58,'country','Kenya','World')
INSERT INTO IAMC_NODES VALUES(59,'country','South Korea','World')
INSERT INTO IAMC_NODES VALUES(60,'country','Belarus','World')
INSERT INTO IAMC_NODES VALUES(61,'country','Tajikistan','World')
INSERT INTO IAMC_NODES VALUES(62,'country','Turkey','World')
INSERT INTO IAMC_NODES VALUES(63,'country','Afghanistan','World')
INSERT INTO IAMC_NODES VALUES(64,'country','Bangladesh','World')
INSERT INTO IAMC_NODES VALUES(65,'country','Mauritania','World')
INSERT INTO IAMC_NODES VALUES(66,'country','Solomon Islands','World')
INSERT INTO IAMC_NODES VALUES(67,'country','Turks and Caicos Islands','World')
INSERT INTO IAMC_NODES VALUES(68,'country','Saint Lucia','World')
INSERT INTO IAMC_NODES VALUES(69,'country','Cyprus','World')
INSERT INTO IAMC_NODES VALUES(70,'country','French Polynesia','World')
INSERT INTO IAMC_NODES VALUES(71,'country','France','World')
INSERT INTO IAMC_NODES VALUES(72,'country','Bermuda','World')
INSERT INTO IAMC_NODES VALUES(73,'country','Namibia','World')
INSERT INTO IAMC_NODES VALUES(74,'country','Somalia','World')
INSERT INTO IAMC_NODES VALUES(75,'country','Peru','World')
INSERT INTO IAMC_NODES VALUES(76,'country','Laos','World')
INSERT INTO IAMC_NODES VALUES(77,'country','Nauru','World')
INSERT INTO IAMC_NODES VALUES(78,'country','Seychelles','World')
INSERT INTO IAMC_NODES VALUES(79,'country','Norway','World')
INSERT INTO IAMC_NODES VALUES(80,'country','Cote d''Ivoire','World')
INSERT INTO IAMC_NODES VALUES(82,'country','Cook Islands','World')
INSERT INTO IAMC_NODES VALUES(83,'country','Benin','World')
INSERT INTO IAMC_NODES VALUES(84,'country','Western Sahara','World')
INSERT INTO IAMC_NODES VALUES(85,'country','Cuba','World')
INSERT INTO IAMC_NODES VALUES(86,'country','Cameroon','World')
INSERT INTO IAMC_NODES VALUES(87,'country','Montenegro','World')
INSERT INTO IAMC_NODES VALUES(88,'country','Saint Kitts and Nevis','World')
INSERT INTO IAMC_NODES VALUES(89,'country','Togo','World')
INSERT INTO IAMC_NODES VALUES(90,'country','China','World')
INSERT INTO IAMC_NODES VALUES(91,'country','Armenia','World')
INSERT INTO IAMC_NODES VALUES(92,'country','Antigua and Barbuda','World')
INSERT INTO IAMC_NODES VALUES(93,'country','Dominican Republic','World')
INSERT INTO IAMC_NODES VALUES(94,'country','Ukraine','World')
INSERT INTO IAMC_NODES VALUES(95,'country','Bahrain','World')
INSERT INTO IAMC_NODES VALUES(96,'country','Tonga','World')
INSERT INTO IAMC_NODES VALUES(97,'country','Finland','World')
INSERT INTO IAMC_NODES VALUES(98,'country','Libya','World')
INSERT INTO IAMC_NODES VALUES(99,'country','Indonesia','World')
INSERT INTO IAMC_NODES VALUES(100,'country','Central African Republic','World')
INSERT INTO IAMC_NODES VALUES(101,'country','United States','World')
INSERT INTO IAMC_NODES VALUES(102,'country','Sweden','World')
INSERT INTO IAMC_NODES VALUES(103,'country','Vietnam','World')
INSERT INTO IAMC_NODES VALUES(104,'country','British Virgin Islands','World')
INSERT INTO IAMC_NODES VALUES(105,'country','Mali','World')
INSERT INTO IAMC_NODES VALUES(106,'country','Russia','World')
INSERT INTO IAMC_NODES VALUES(107,'country','Bulgaria','World')
INSERT INTO IAMC_NODES VALUES(108,'country','Mauritius','World')
INSERT INTO IAMC_NODES VALUES(109,'country','Romania','World')
INSERT INTO IAMC_NODES VALUES(110,'country','Angola','World')
INSERT INTO IAMC_NODES VALUES(111,'country','Portugal','World')
INSERT INTO IAMC_NODES VALUES(112,'country','South Africa','World')
INSERT INTO IAMC_NODES VALUES(113,'country','Fiji','World')
INSERT INTO IAMC_NODES VALUES(114,'country','Brunei Darussalam','World')
INSERT INTO IAMC_NODES VALUES(115,'country','Malaysia','World')
INSERT INTO IAMC_NODES VALUES(116,'country','Austria','World')
INSERT INTO IAMC_NODES VALUES(117,'country','Mozambique','World')
INSERT INTO IAMC_NODES VALUES(118,'country','Uganda','World')
INSERT INTO IAMC_NODES VALUES(119,'country','Kyrgyz Republic','World')
INSERT INTO IAMC_NODES VALUES(120,'country','Hungary','World')
INSERT INTO IAMC_NODES VALUES(121,'country','Niger','World')
INSERT INTO IAMC_NODES VALUES(122,'country','Brazil','World')
INSERT INTO IAMC_NODES VALUES(123,'country','Falkland Islands','World')
INSERT INTO IAMC_NODES VALUES(124,'country','Kuwait','World')
INSERT INTO IAMC_NODES VALUES(125,'country','Panama','World')
INSERT INTO IAMC_NODES VALUES(126,'country','Guyana','World')
INSERT INTO IAMC_NODES VALUES(127,'country','Costa Rica','World')
INSERT INTO IAMC_NODES VALUES(128,'country','Luxembourg','World')
INSERT INTO IAMC_NODES VALUES(129,'country','American Samoa','World')
INSERT INTO IAMC_NODES VALUES(130,'country','Gibraltar','World')
INSERT INTO IAMC_NODES VALUES(131,'country','Ireland','World')
INSERT INTO IAMC_NODES VALUES(132,'country','Nigeria','World')
INSERT INTO IAMC_NODES VALUES(133,'country','Ecuador','World')
INSERT INTO IAMC_NODES VALUES(134,'country','Czech Republic','World')
INSERT INTO IAMC_NODES VALUES(135,'country','Australia','World')
INSERT INTO IAMC_NODES VALUES(136,'country','Iran','World')
INSERT INTO IAMC_NODES VALUES(137,'country','Algeria','World')
INSERT INTO IAMC_NODES VALUES(138,'country','El Salvador','World')
INSERT INTO IAMC_NODES VALUES(139,'country','Saint Pierre and Miquelon','World')
INSERT INTO IAMC_NODES VALUES(140,'country','Chile','World')
INSERT INTO IAMC_NODES VALUES(141,'country','Puerto Rico','World')
INSERT INTO IAMC_NODES VALUES(142,'country','Belgium','World')
INSERT INTO IAMC_NODES VALUES(143,'country','Thailand','World')
INSERT INTO IAMC_NODES VALUES(144,'country','Haiti','World')
INSERT INTO IAMC_NODES VALUES(145,'country','Iraq','World')
INSERT INTO IAMC_NODES VALUES(146,'country','Sierra Leone','World')
INSERT INTO IAMC_NODES VALUES(147,'country','Georgia','World')
INSERT INTO IAMC_NODES VALUES(148,'country','Hong Kong (China)','World')
INSERT INTO IAMC_NODES VALUES(149,'country','Denmark','World')
INSERT INTO IAMC_NODES VALUES(150,'country','Poland','World')
INSERT INTO IAMC_NODES VALUES(151,'country','Moldova','World')
INSERT INTO IAMC_NODES VALUES(152,'country','Morocco','World')
INSERT INTO IAMC_NODES VALUES(153,'country','Croatia','World')
INSERT INTO IAMC_NODES VALUES(154,'country','Mongolia','World')
INSERT INTO IAMC_NODES VALUES(155,'country','Guinea-Bissau','World')
INSERT INTO IAMC_NODES VALUES(156,'country','Kiribati','World')
INSERT INTO IAMC_NODES VALUES(157,'country','Switzerland','World')
INSERT INTO IAMC_NODES VALUES(158,'country','Grenada','World')
INSERT INTO IAMC_NODES VALUES(159,'country','Belize','World')
INSERT INTO IAMC_NODES VALUES(160,'country','Chad','World')
INSERT INTO IAMC_NODES VALUES(161,'country','Estonia','World')
INSERT INTO IAMC_NODES VALUES(162,'country','Uruguay','World')
INSERT INTO IAMC_NODES VALUES(163,'country','Equatorial Guinea','World')
INSERT INTO IAMC_NODES VALUES(164,'country','Lebanon','World')
INSERT INTO IAMC_NODES VALUES(165,'country','Uzbekistan','World')
INSERT INTO IAMC_NODES VALUES(166,'country','Tunisia','World')
INSERT INTO IAMC_NODES VALUES(167,'country','Djibouti','World')
INSERT INTO IAMC_NODES VALUES(168,'country','Rwanda','World')
INSERT INTO IAMC_NODES VALUES(169,'country','Timor-Leste','World')
INSERT INTO IAMC_NODES VALUES(170,'country','Dominica','World')
INSERT INTO IAMC_NODES VALUES(171,'country','Colombia','World')
INSERT INTO IAMC_NODES VALUES(172,'country','Reunion','World')
INSERT INTO IAMC_NODES VALUES(173,'country','Burundi','World')
INSERT INTO IAMC_NODES VALUES(174,'country','Taiwan','World')
INSERT INTO IAMC_NODES VALUES(175,'country','Nicaragua','World')
INSERT INTO IAMC_NODES VALUES(176,'country','Barbados','World')
INSERT INTO IAMC_NODES VALUES(177,'country','Qatar','World')
INSERT INTO IAMC_NODES VALUES(178,'country','Congo, Dem. Rep.','World')
INSERT INTO IAMC_NODES VALUES(179,'country','Italy','World')
INSERT INTO IAMC_NODES VALUES(180,'country','Bhutan','World')
INSERT INTO IAMC_NODES VALUES(181,'country','Sudan','World')
INSERT INTO IAMC_NODES VALUES(182,'country','Nepal','World')
INSERT INTO IAMC_NODES VALUES(183,'country','Malta','World')
INSERT INTO IAMC_NODES VALUES(184,'country','Maldives','World')
INSERT INTO IAMC_NODES VALUES(185,'country','Suriname','World')
INSERT INTO IAMC_NODES VALUES(186,'country','Cayman Islands','World')
INSERT INTO IAMC_NODES VALUES(187,'country','Venezuela','World')
INSERT INTO IAMC_NODES VALUES(188,'country','Israel','World')
INSERT INTO IAMC_NODES VALUES(189,'country','Iceland','World')
INSERT INTO IAMC_NODES VALUES(190,'country','Zambia','World')
INSERT INTO IAMC_NODES VALUES(191,'country','Senegal','World')
INSERT INTO IAMC_NODES VALUES(192,'country','Papua New Guinea','World')
INSERT INTO IAMC_NODES VALUES(193,'country','Malawi','World')
INSERT INTO IAMC_NODES VALUES(194,'country','Macau (China)','World')
INSERT INTO IAMC_NODES VALUES(195,'country','Trinidad and Tobago','World')
INSERT INTO IAMC_NODES VALUES(196,'country','Zimbabwe','World')
INSERT INTO IAMC_NODES VALUES(197,'country','Germany','World')
INSERT INTO IAMC_NODES VALUES(198,'country','Vanuatu','World')
INSERT INTO IAMC_NODES VALUES(199,'country','Martinique','World')
INSERT INTO IAMC_NODES VALUES(200,'country','Kazakhstan','World')
INSERT INTO IAMC_NODES VALUES(201,'country','Philippines','World')
INSERT INTO IAMC_NODES VALUES(202,'country','Eritrea','World')
INSERT INTO IAMC_NODES VALUES(203,'country','Montserrat','World')
INSERT INTO IAMC_NODES VALUES(204,'country','New Caledonia','World')
INSERT INTO IAMC_NODES VALUES(205,'country','Macedonia','World')
INSERT INTO IAMC_NODES VALUES(206,'country','North Korea','World')
INSERT INTO IAMC_NODES VALUES(207,'country','Paraguay','World')
INSERT INTO IAMC_NODES VALUES(208,'country','Latvia','World')
INSERT INTO IAMC_NODES VALUES(209,'country','Japan','World')
INSERT INTO IAMC_NODES VALUES(210,'country','Syria','World')
INSERT INTO IAMC_NODES VALUES(211,'country','Honduras','World')
INSERT INTO IAMC_NODES VALUES(212,'country','Myanmar','World')
INSERT INTO IAMC_NODES VALUES(213,'country','Mexico','World')
INSERT INTO IAMC_NODES VALUES(214,'country','Egypt','World')
INSERT INTO IAMC_NODES VALUES(215,'country','Singapore','World')
INSERT INTO IAMC_NODES VALUES(216,'country','Serbia','World')
INSERT INTO IAMC_NODES VALUES(217,'country','Botswana','World')
INSERT INTO IAMC_NODES VALUES(218,'country','United Kingdom','World')
INSERT INTO IAMC_NODES VALUES(219,'country','Antarctica','World')
INSERT INTO IAMC_NODES VALUES(220,'country','Gambia, The','World')
INSERT INTO IAMC_NODES VALUES(221,'country','Greece','World')
INSERT INTO IAMC_NODES VALUES(222,'country','Sri Lanka','World')
INSERT INTO IAMC_NODES VALUES(223,'country','French Guiana','World')
INSERT INTO IAMC_NODES VALUES(224,'country','Comoros','World')
INSERT INTO "schema_version" VALUES(1,'1','hsql base version','SQL','V1__hsql_base_version.sql',1588531206,'ixmp','2019-12-04 14:10:00.179000',33,'1')
COMMIT
drop table schema_config
INSERT INTO "schema_version" VALUES(2,'1.1','drop schema config','SQL','V1.1__drop_schema_config.sql',-371554450,'ixmp','2019-12-04 14:10:00.184000',0,'1')
COMMIT
alter table change_log alter column item varchar(256)
INSERT INTO "schema_version" VALUES(3,'1.2','alter changelog item','SQL','V1.2__alter_changelog_item.sql',651187541,'ixmp','2019-12-04 14:10:00.187000',0,'1')
COMMIT
create sequence iamc_nodes_seq start with 1000
INSERT INTO "schema_version" VALUES(4,'1.3','nodes sequence','SQL','V1.3__nodes_sequence.sql',-1560705678,'ixmp','2019-12-04 14:10:00.191000',0,'1')
COMMIT
create sequence metadata_seq\u000a  as bigint
create table metadata (\u000a  id   bigint generated by default as sequence metadata_seq,\u000a  name varchar(256) not null,\u000a  constraint metadata_id_pkey primary key (id)\u000a)
create table metadata_entries (\u000a  meta_id       bigint not null,\u000a  idx           bigint not null,\u000a  string_value  varchar(1000),\u000a  numeric_value decimal(20, 10),\u000a  boolean_value boolean,\u000a  constraint metadata_entries_uniq unique (meta_id, idx)\u000a)
create table run_meta (\u000a  meta_id  bigint,\u000a  scen_id  bigint,\u000a  model_id bigint,\u000a  version  bigint,\u000a  constraint metadata_meta_id_fkey foreign key (meta_id) references metadata (id),\u000a  constraint metadata_scen_id_fkey foreign key (scen_id) references scenario (id),\u000a  constraint metadata_model_id_fkey foreign key (model_id) references model (id)\u000a)
INSERT INTO "schema_version" VALUES(5,'1.4','create metadata','SQL','V1.4__create_metadata.sql',-2126874758,'ixmp','2019-12-04 14:10:00.196000',0,'1')
COMMIT
create sequence workspaces_seq\u000a    as bigint
create table workspaces (\u000a    id           bigint        not null,\u000a    name         varchar(256)  not null,\u000a    description  varchar(4000),\u000a    figures      clob          not null,\u000a    preview      clob,\u000a    is_published boolean default false,\u000a    updated_at   timestamp     not null,\u000a    updated_by   varchar(255),\u000a    constraint workspaces_id_pkey primary key (id)\u000a)
INSERT INTO "schema_version" VALUES(6,'1.5','create workspaces','SQL','V1.5__create_workspaces.sql',-1669512798,'ixmp','2019-12-04 14:10:00.200000',0,'1')
COMMIT
alter table ix_key alter column key varchar(256)
INSERT INTO "schema_version" VALUES(7,'1.6','alter ix key item','SQL','V1.6__alter_ix_key_item.sql',668576619,'ixmp','2019-12-04 14:10:00.204000',0,'1')
COMMIT
alter table workspaces add publish_type varchar(20) default 'private' not null
alter table workspaces add access_token varchar(255)
alter table workspaces drop column is_published
INSERT INTO "schema_version" VALUES(8,'1.7','publish workspaces','SQL','V1.7__publish_workspaces.sql',585469445,'ixmp','2019-12-04 14:10:00.210000',1,'1')
COMMIT
create table documentation (\u000a    key         varchar(1000) not null,\u000a    description varchar(4000) not null,\u000a    constraint documentation_key_pk primary key (key)\u000a)
INSERT INTO "schema_version" VALUES(9,'1.8','documentation','SQL','V1.8__documentation.sql',1921144534,'ixmp','2019-12-04 14:10:00.215000',0,'1')
COMMIT
DELETE FROM IAMC_NODES WHERE ID=0
INSERT INTO IAMC_NODES VALUES(0,'common','World','World')
INSERT INTO "schema_version" VALUES(10,'1.9','regions','SQL','V1.9__regions.sql',1577033240,'ixmp','2019-12-04 14:10:00.220000',0,'1')
COMMIT
create index IAMC_TSINFO_RUNID_KEY_IDX on IAMC_TSINFO (RUNID, KEY)
INSERT INTO "schema_version" VALUES(11,'1.10','timeseries index','SQL','V1.10__timeseries_index.sql',-914452262,'ixmp','2019-12-04 14:10:00.224000',0,'1')
COMMIT
CREATE TABLE downloads (\u000a    id          BIGINT        NOT NULL,\u000a    filename    VARCHAR(256)  NOT NULL,\u000a    description VARCHAR(1000) NOT NULL,\u000a    filesize    INTEGER DEFAULT 0,\u000a    content     BLOB,\u000a    CONSTRAINT downloads_pk PRIMARY KEY (id),\u000a    CONSTRAINT downloads_uk UNIQUE (filename)\u000a)
CREATE TABLE downloads_audit (\u000a    action    VARCHAR(256)         NOT NULL,\u000a    timestamp DATE DEFAULT SYSDATE NOT NULL,\u000a    username  VARCHAR(128),\u000a    text      VARCHAR(1000)\u000a)
CREATE SEQUENCE downloads_seq
INSERT INTO "schema_version" VALUES(12,'1.11','downloads','SQL','V1.11__downloads.sql',-1288518840,'ixmp','2019-12-04 14:10:00.230000',0,'1')
COMMIT
ALTER TABLE downloads ADD sort_order BIGINT
ALTER TABLE downloads ADD content_type VARCHAR(255)
INSERT INTO "schema_version" VALUES(13,'1.12','downloads sorting','SQL','V1.12__downloads_sorting.sql',-841658431,'ixmp','2019-12-04 14:10:00.234000',0,'1')
COMMIT
CREATE INDEX iamc_tsinfo_runid_ind ON iamc_tsinfo(runid)
CREATE INDEX metadata_entries__idx ON metadata_entries(meta_id)
INSERT INTO "schema_version" VALUES(14,'1.13','optimizations','SQL','V1.13__optimizations.sql',-1994705346,'ixmp','2019-12-04 14:10:00.238000',0,'1')
COMMIT
CREATE TABLE annotation_log_copy AS (SELECT * FROM annotation_log) WITH DATA
CREATE TABLE change_log_copy AS (SELECT * FROM change_log) WITH DATA
CREATE TABLE ix_set_copy AS (SELECT * FROM ix_set) WITH DATA
CREATE TABLE ix_set_dim_copy AS (SELECT * FROM ix_set_dim) WITH DATA
CREATE TABLE ix_set_blobstore_copy AS (SELECT * FROM ix_set_blobstore) WITH DATA
CREATE TABLE ix_par_copy AS (SELECT * FROM ix_par) WITH DATA
CREATE TABLE ix_par_dim_copy AS (SELECT * FROM ix_par_dim) WITH DATA
CREATE TABLE ix_par_blobstore_copy AS (SELECT * FROM ix_par_blobstore) WITH DATA
CREATE TABLE ix_var_copy AS (SELECT * FROM ix_var) WITH DATA
CREATE TABLE ix_var_dim_copy AS (SELECT * FROM ix_var_dim) WITH DATA
CREATE TABLE ix_var_blobstore_copy AS (SELECT * FROM ix_var_blobstore) WITH DATA
CREATE TABLE ix_equ_copy AS (SELECT * FROM ix_equ) WITH DATA
CREATE TABLE ix_equ_dim_copy AS (SELECT * FROM ix_equ_dim) WITH DATA
CREATE TABLE ix_equ_blobstore_copy AS (SELECT * FROM ix_equ_blobstore) WITH DATA
CREATE TABLE ix_key_copy AS (SELECT * FROM ix_key) WITH DATA
CREATE TABLE ix_idxset_copy AS (SELECT * FROM ix_idxset) WITH DATA
CREATE TABLE iamc_tsinfo_copy AS (SELECT * FROM iamc_tsinfo) WITH DATA
CREATE TABLE iamc_tsdata_copy AS (SELECT * FROM iamc_tsdata) WITH DATA
DROP VIEW iamc_overview
DROP TABLE change_log
DROP TABLE annotation_log
DROP TABLE ix_set_blobstore
DROP TABLE ix_set_dim
DROP TABLE ix_set
DROP TABLE ix_par_blobstore
DROP TABLE ix_par_dim
DROP TABLE ix_par
DROP TABLE ix_var_blobstore
DROP TABLE ix_var_dim
DROP TABLE ix_var
DROP TABLE ix_equ_blobstore
DROP TABLE ix_equ_dim
DROP TABLE ix_equ
DROP TABLE ix_key
DROP TABLE ix_idxset
DROP TABLE iamc_tsdata
DROP TABLE iamc_tsinfo
CREATE TABLE annotation_log (\u000a    annotationid INTEGER                          NOT NULL,\u000a    status       VARCHAR(128)                     NOT NULL,\u000a    runid        INTEGER,\u000a    script       VARCHAR(128)                     NOT NULL,\u000a    cre_user     VARCHAR(128) DEFAULT '(unknown)' NOT NULL,\u000a    cre_date     TIMESTAMP    DEFAULT NOW()       NOT NULL,\u000a    upd_user     VARCHAR(64),\u000a    upd_date     TIMESTAMP,\u000a    text         VARCHAR(512),\u000a    interface    VARCHAR(20)\u000a)
ALTER TABLE annotation_log ADD CONSTRAINT annotation_log_pk PRIMARY KEY (annotationid)
ALTER TABLE annotation_log ADD CONSTRAINT annotation_log_runid_fk FOREIGN KEY (runid) REFERENCES run (id) ON UPDATE CASCADE ON DELETE CASCADE
CREATE TABLE change_log (\u000a    annotationid INTEGER      NOT NULL,\u000a    runid        INTEGER      NOT NULL,\u000a    operation    VARCHAR(64)  NOT NULL,\u000a    item         VARCHAR(256) NOT NULL,\u000a    key          VARCHAR(512),\u000a    val_prev     DOUBLE,\u000a    val_new      DOUBLE,\u000a    seq          INTEGER\u000a)
ALTER TABLE change_log ADD CONSTRAINT change_log_annotationid_fk FOREIGN KEY (annotationid) REFERENCES annotation_log (annotationid) ON UPDATE CASCADE ON DELETE CASCADE
ALTER TABLE change_log ADD CONSTRAINT change_log_runid_fk FOREIGN KEY (runid) REFERENCES run (id) ON UPDATE CASCADE ON DELETE CASCADE
CREATE TABLE ix_key (\u000a    runid INTEGER      NOT NULL,\u000a    keyid INTEGER      NOT NULL,\u000a    key   VARCHAR(256) NOT NULL\u000a)
ALTER TABLE ix_key ADD CONSTRAINT ix_key_pk PRIMARY KEY (runid, keyid)
ALTER TABLE ix_key ADD CONSTRAINT ix_key_runid_fk FOREIGN KEY (runid) REFERENCES run (id) ON UPDATE CASCADE ON DELETE CASCADE
CREATE TABLE ix_idxset (\u000a    runid    INTEGER     NOT NULL,\u000a    name     VARCHAR(64) NOT NULL,\u000a    ele_blob BLOB,\u000a    itemid   INTEGER     NOT NULL,\u000a    com_blob BLOB\u000a)
ALTER TABLE ix_idxset ADD CONSTRAINT ix_idxset_pk PRIMARY KEY (runid, name)
ALTER TABLE ix_idxset ADD CONSTRAINT ix_idxset_runid_fk FOREIGN KEY (runid) REFERENCES run (id) ON UPDATE CASCADE ON DELETE CASCADE
CREATE TABLE ix_set (\u000a    runid  INTEGER           NOT NULL,\u000a    name   VARCHAR(64)       NOT NULL,\u000a    dim    INTEGER DEFAULT 0 NOT NULL,\u000a    itemid INTEGER\u000a)
ALTER TABLE ix_set ADD CONSTRAINT ix_set_pk PRIMARY KEY (runid, name)
ALTER TABLE ix_set ADD CONSTRAINT ix_set_runid_fk FOREIGN KEY (runid) REFERENCES run (id) ON UPDATE CASCADE ON DELETE CASCADE
CREATE TABLE ix_set_dim (\u000a    runid    INTEGER     NOT NULL,\u000a    name     VARCHAR(64) NOT NULL,\u000a    idx      INTEGER     NOT NULL,\u000a    idx_set  VARCHAR(64) NOT NULL,\u000a    idx_name VARCHAR(64) NOT NULL\u000a)
ALTER TABLE ix_set_dim ADD CONSTRAINT ix_set_dim_pk PRIMARY KEY (runid, name, idx)
ALTER TABLE ix_set_dim ADD CONSTRAINT ix_set_dim_runid_name_fk FOREIGN KEY (runid, name) REFERENCES ix_set (runid, name) ON UPDATE CASCADE ON DELETE CASCADE
ALTER TABLE ix_set_dim ADD CONSTRAINT ix_set_dim_runid_idx_set_fk FOREIGN KEY (runid, idx_set) REFERENCES ix_idxset (runid, name) ON UPDATE CASCADE ON DELETE CASCADE
CREATE TABLE ix_set_blobstore (\u000a    runid    INTEGER      NOT NULL,\u000a    name     VARCHAR(256) NOT NULL,\u000a    ele_blob BLOB,\u000a    com_blob BLOB\u000a)
ALTER TABLE ix_set_blobstore ADD CONSTRAINT ix_set_blobstore_pk PRIMARY KEY (runid, name)
ALTER TABLE ix_set_blobstore ADD CONSTRAINT ix_set_blobstore_runid_name_fk FOREIGN KEY (runid, name) REFERENCES ix_set (runid, name) ON UPDATE CASCADE ON DELETE CASCADE
CREATE TABLE ix_par (\u000a    runid  INTEGER           NOT NULL,\u000a    name   VARCHAR(64)       NOT NULL,\u000a    dim    INTEGER DEFAULT 0 NOT NULL,\u000a    itemid INTEGER\u000a)
ALTER TABLE ix_par ADD CONSTRAINT ix_par_pk PRIMARY KEY (runid, name)
ALTER TABLE ix_par ADD CONSTRAINT ix_par_runid_fk FOREIGN KEY (runid) REFERENCES run (id) ON UPDATE CASCADE ON DELETE CASCADE
CREATE TABLE ix_par_dim (\u000a    runid    INTEGER     NOT NULL,\u000a    name     VARCHAR(64) NOT NULL,\u000a    idx      INTEGER     NOT NULL,\u000a    idx_set  VARCHAR(64) NOT NULL,\u000a    idx_name VARCHAR(64) NOT NULL\u000a)
ALTER TABLE ix_par_dim ADD CONSTRAINT ix_par_dim_pk PRIMARY KEY (runid, name, idx)
ALTER TABLE ix_par_dim ADD CONSTRAINT ix_par_dim_runid_name_fk FOREIGN KEY (runid, name) REFERENCES ix_par (runid, name) ON UPDATE CASCADE ON DELETE CASCADE
ALTER TABLE ix_par_dim ADD CONSTRAINT ix_par_dim_runid_idx_set_fk FOREIGN KEY (runid, idx_set) REFERENCES ix_idxset (runid, name) ON UPDATE CASCADE ON DELETE CASCADE
CREATE TABLE ix_par_blobstore (\u000a    runid    INTEGER      NOT NULL,\u000a    name     VARCHAR(256) NOT NULL,\u000a    ele_blob BLOB,\u000a    com_blob BLOB\u000a)
ALTER TABLE ix_par_blobstore ADD CONSTRAINT ix_par_blobstore_pk PRIMARY KEY (runid, name)
ALTER TABLE ix_par_blobstore ADD CONSTRAINT ix_par_blobstore_runid_name_fk FOREIGN KEY (runid, name) REFERENCES ix_par (runid, name) ON UPDATE CASCADE ON DELETE CASCADE
CREATE TABLE ix_var (\u000a    runid  INTEGER           NOT NULL,\u000a    name   VARCHAR(64)       NOT NULL,\u000a    dim    INTEGER DEFAULT 0 NOT NULL,\u000a    itemid INTEGER\u000a)
ALTER TABLE ix_var ADD CONSTRAINT ix_var_pk PRIMARY KEY (runid, name)
ALTER TABLE ix_var ADD CONSTRAINT ix_var_runid_fk FOREIGN KEY (runid) REFERENCES run (id) ON UPDATE CASCADE ON DELETE CASCADE
CREATE TABLE ix_var_dim (\u000a    runid    INTEGER     NOT NULL,\u000a    name     VARCHAR(64) NOT NULL,\u000a    idx      INTEGER     NOT NULL,\u000a    idx_set  VARCHAR(64) NOT NULL,\u000a    idx_name VARCHAR(64) NOT NULL\u000a)
ALTER TABLE ix_var_dim ADD CONSTRAINT ix_var_dim_pk PRIMARY KEY (runid, name, idx)
ALTER TABLE ix_var_dim ADD CONSTRAINT ix_var_dim_runid_name_fk FOREIGN KEY (runid, name) REFERENCES ix_var (runid, name) ON UPDATE CASCADE ON DELETE CASCADE
ALTER TABLE ix_var_dim ADD CONSTRAINT ix_var_dim_runid_idx_set_fk FOREIGN KEY (runid, idx_set) REFERENCES ix_idxset (runid, name) ON UPDATE CASCADE ON DELETE CASCADE
CREATE TABLE ix_var_blobstore (\u000a    runid    INTEGER      NOT NULL,\u000a    name     VARCHAR(256) NOT NULL,\u000a    ele_blob BLOB,\u000a    com_blob BLOB\u000a)
ALTER TABLE ix_var_blobstore ADD CONSTRAINT ix_var_blobstore_pk PRIMARY KEY (runid, name)
ALTER TABLE ix_var_blobstore ADD CONSTRAINT ix_var_blobstore_runid_name_fk FOREIGN KEY (runid, name) REFERENCES ix_var (runid, name) ON UPDATE CASCADE ON DELETE CASCADE
CREATE TABLE ix_equ (\u000a    runid  INTEGER           NOT NULL,\u000a    name   VARCHAR(64)       NOT NULL,\u000a    dim    INTEGER DEFAULT 0 NOT NULL,\u000a    itemid INTEGER\u000a)
ALTER TABLE ix_equ ADD CONSTRAINT ix_equ_pk PRIMARY KEY (runid, name)
ALTER TABLE ix_equ ADD CONSTRAINT ix_equ_runid_fk FOREIGN KEY (runid) REFERENCES run (id) ON UPDATE CASCADE ON DELETE CASCADE
CREATE TABLE ix_equ_dim (\u000a    runid    INTEGER     NOT NULL,\u000a    name     VARCHAR(64) NOT NULL,\u000a    idx      INTEGER     NOT NULL,\u000a    idx_set  VARCHAR(64) NOT NULL,\u000a    idx_name VARCHAR(64) NOT NULL\u000a)
ALTER TABLE ix_equ_dim ADD CONSTRAINT ix_equ_dim_pk PRIMARY KEY (runid, name, idx)
ALTER TABLE ix_equ_dim ADD CONSTRAINT ix_equ_dim_runid_name_fk FOREIGN KEY (runid, name) REFERENCES ix_equ (runid, name) ON UPDATE CASCADE ON DELETE CASCADE
ALTER TABLE ix_equ_dim ADD CONSTRAINT ix_equ_dim_runid_idx_set_fk FOREIGN KEY (runid, idx_set) REFERENCES ix_idxset (runid, name) ON UPDATE CASCADE ON DELETE CASCADE
CREATE TABLE ix_equ_blobstore (\u000a    runid    INTEGER      NOT NULL,\u000a    name     VARCHAR(256) NOT NULL,\u000a    ele_blob BLOB,\u000a    com_blob BLOB\u000a)
ALTER TABLE ix_equ_blobstore ADD CONSTRAINT ix_equ_blobstore_pk PRIMARY KEY (runid, name)
ALTER TABLE ix_equ_blobstore ADD CONSTRAINT ix_equ_blobstore_runid_name_fk FOREIGN KEY (runid, name) REFERENCES ix_equ (runid, name) ON UPDATE CASCADE ON DELETE CASCADE
CREATE TABLE iamc_tsinfo (\u000a    tsid  INTEGER           NOT NULL,\u000a    runid INTEGER           NOT NULL,\u000a    node  INTEGER           NOT NULL,\u000a    key   INTEGER           NOT NULL,\u000a    time  INTEGER           NOT NULL,\u000a    meta  INTEGER DEFAULT 0 NOT NULL\u000a)
ALTER TABLE iamc_tsinfo ADD CONSTRAINT iamc_tsinfo_pk UNIQUE (tsid)
ALTER TABLE iamc_tsinfo ADD CONSTRAINT iamc_tsinfo_uk1 UNIQUE (runid, node, key, time)
ALTER TABLE iamc_tsinfo ADD CONSTRAINT iamc_tsinfo_runid_fk FOREIGN KEY (runid) REFERENCES run(id) ON DELETE CASCADE
ALTER TABLE iamc_tsinfo ADD CONSTRAINT iamc_tsinfo_key_fk FOREIGN KEY (key) REFERENCES iamc_key(keyid) ON DELETE CASCADE
ALTER TABLE iamc_tsinfo ADD CONSTRAINT iamc_tsinfo_node_fk FOREIGN KEY (node) REFERENCES iamc_nodes(id) ON DELETE CASCADE
CREATE TABLE iamc_tsdata (\u000a    tsid  INTEGER NOT NULL,\u000a    year  INTEGER NOT NULL,\u000a    value DOUBLE  NOT NULL\u000a)
ALTER TABLE iamc_tsdata ADD CONSTRAINT iamc_tsdata_pk UNIQUE (tsid,year)
ALTER TABLE iamc_tsdata ADD CONSTRAINT iamc_tsdata_tsid_fk FOREIGN KEY (tsid) REFERENCES iamc_tsinfo(tsid) ON DELETE CASCADE
DROP TABLE change_log_copy
DROP TABLE annotation_log_copy
DROP TABLE ix_key_copy
DROP TABLE ix_idxset_copy
DROP TABLE ix_set_copy
DROP TABLE ix_set_dim_copy
DROP TABLE ix_set_blobstore_copy
DROP TABLE ix_par_copy
DROP TABLE ix_par_dim_copy
DROP TABLE ix_par_blobstore_copy
DROP TABLE ix_var_copy
DROP TABLE ix_var_dim_copy
DROP TABLE ix_var_blobstore_copy
DROP TABLE ix_equ_copy
DROP TABLE ix_equ_dim_copy
DROP TABLE ix_equ_blobstore_copy
DROP TABLE iamc_tsinfo_copy
DROP TABLE iamc_tsdata_copy
CREATE VIEW iamc_overview (model, scenario, region, variable, unit, time, year, value, meta, version, isdefault) AS\u000aSELECT m.name, s.name, n.name, k.keystring, u.name, i.time, d.year, d.value, i.meta, r.version, CASE cast(rd.id AS BOOLEAN) WHEN TRUE THEN 'True' ELSE ' ' END isdefault\u000aFROM iamc_key k\u000aINNER JOIN ix_unit u ON u.id = k.unitid\u000aINNER JOIN iamc_tsinfo i ON i.key = k.keyid\u000aINNER JOIN run r ON r.id = i.runid\u000aLEFT JOIN run_default rd ON rd.id = r.id\u000aINNER JOIN model m ON m.id = r.model_id\u000aINNER JOIN scenario s ON s.id = r.scen_id\u000aINNER JOIN iamc_nodes n ON i.node = n.id\u000aINNER JOIN iamc_tsdata d ON i.tsid = d.tsid
INSERT INTO "schema_version" VALUES(15,'1.14','cascade constraints','SQL','V1.14__cascade_constraints.sql',-558027783,'ixmp','2019-12-04 14:10:00.277000',30,'1')
COMMIT
CREATE TABLE iamc_tsgeodata (\u000a    tsid    INTEGER            NOT NULL,\u000a    year    INTEGER DEFAULT -1 NOT NULL,\u000a    layerid VARCHAR(1000)      NOT NULL\u000a)
ALTER TABLE iamc_tsgeodata ADD CONSTRAINT iamc_tsgeodata_pk PRIMARY KEY (tsid, year)
ALTER TABLE iamc_tsgeodata ADD CONSTRAINT iamc_tsgeodata_tsid_fk FOREIGN KEY (tsid) REFERENCES iamc_tsinfo (tsid) ON DELETE CASCADE
INSERT INTO "schema_version" VALUES(16,'1.15','iamc tsgeodata','SQL','V1.15__iamc_tsgeodata.sql',-1234858516,'ixmp','2019-12-04 14:10:00.282000',1,'1')
COMMIT
ALTER TABLE downloads ADD author VARCHAR(255)
ALTER TABLE downloads ADD created_at DATE DEFAULT SYSDATE NOT NULL
INSERT INTO "schema_version" VALUES(17,'1.16','uploads','SQL','V1.16__uploads.sql',-1092649229,'ixmp','2019-12-04 14:10:00.286000',0,'1')
COMMIT
ALTER TABLE workspaces ALTER COLUMN figures RENAME TO panels
INSERT INTO "schema_version" VALUES(18,'1.17','figures to panels','SQL','V1.17__figures_to_panels.sql',1616121481,'ixmp','2019-12-04 14:10:00.311000',0,'1')
COMMIT
CREATE TABLE job_queue (\u000a    id          BIGINT                        NOT NULL,\u000a    created_at  DATE        DEFAULT SYSDATE   NOT NULL,\u000a    started_at  DATE,\u000a    finished_at DATE,\u000a    status      VARCHAR(64) DEFAULT 'CREATED' NOT NULL,\u000a    parameters  CLOB,\u000a    result      CLOB,\u000a    CONSTRAINT job_queue_pk PRIMARY KEY (id)\u000a)
CREATE SEQUENCE job_queue_seq
INSERT INTO "schema_version" VALUES(19,'1.18','queue','SQL','V1.18__queue.sql',-854548658,'ixmp','2019-12-04 14:10:00.315000',0,'1')
COMMIT
ALTER TABLE job_queue ADD created_by VARCHAR(255)
INSERT INTO "schema_version" VALUES(20,'1.19','queue author','SQL','V1.19__queue_author.sql',1318423274,'ixmp','2019-12-04 14:10:00.319000',0,'1')
COMMIT
CREATE TABLE job_logs (\u000a    job_id BIGINT NOT NULL,\u000a    log    CLOB,\u000a    CONSTRAINT job_logs_pk PRIMARY KEY (job_id),\u000a    CONSTRAINT job_logs_fk1 FOREIGN KEY (job_id) REFERENCES job_queue (id)\u000a)
INSERT INTO "schema_version" VALUES(21,'1.20','queue log','SQL','V1.20__queue_log.sql',425634284,'ixmp','2019-12-04 14:10:00.324000',0,'1')
COMMIT
SET SCHEMA "PUBLIC"
DISCONNECT
